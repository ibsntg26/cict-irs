# Generated by Django 4.0.4 on 2022-05-09 09:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('picture', models.ImageField(blank=True, default='user.png', upload_to='profile-picture/')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('middle_initial', models.CharField(blank=True, max_length=10, null=True, verbose_name='middle initial')),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='mobile number')),
                ('role', models.PositiveSmallIntegerField(choices=[(1, 'admin'), (2, 'evaluator'), (3, 'student')], default=3)),
                ('is_active', models.BooleanField(default=True, verbose_name='active status')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_number', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='student number')),
                ('year_level', models.CharField(max_length=10, verbose_name='year level')),
                ('section', models.CharField(max_length=10, verbose_name='section')),
                ('residential_address', models.CharField(max_length=255, verbose_name='residential address')),
                ('permanent_address', models.CharField(max_length=255, verbose_name='permanent address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Evaluator',
            fields=[
                ('employee_number', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='employee number')),
                ('position', models.CharField(max_length=100, verbose_name='position')),
                ('residential_address', models.CharField(max_length=255, verbose_name='residential address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'evaluator',
            },
        ),
    ]
